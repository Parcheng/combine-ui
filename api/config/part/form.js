window.config = {};
window.config.info = [
    "<h2>○ 参数结构：</h2>",
    "id: \"\",    【 该Part的ID，可通过 getConfig() 获取配置参数对象等 】",
    "col: 3,    【 列数，当列数大于1会根据宽度自动分割，默认1 】",
    "elements: [    【 表单元素对象的数组 】",
    "    { ",
    "        key: \"key_1\",     【 表单元素Key，可以通过Key获取/设置该元素的值等 】",
    "        title: \"KEY-1\",     【 表单元素的文本标题，默认无 】",
    "        type: \"text\",     【 表单元素类型，text表示文本输入框，可选值：text|date|radio|checkbox|select|textarea|span 】",
    "        default: \"KEY-1-Default\",     【 表单元素中显示的提示文本，默认无 】",
    "        verify: \"NO_NULL\",     【 验证规则，默认不验证，可选值：NO_NULL|GTE_?|GT_?|LTE_?|LT_?|E_?|LENGTH_GTE_?|LENGTH_GT_?|LENGTH_LTE_?|LENGTH_LT_?|LENGTH_E_? 其中?为自定义数字 】",
    "        help: \"提示：key_1 是 text 类型\",     【 提示信息，可通过函数控制显示/隐藏 】",
    "        error: \"该值不能为空！\"     【 验证报错提示，需和verify同时使用，可通过调用验证函数验证，出现验证失败的元素则显示提示 】",
    "    },{    ",
    "        key: \"key2.key22\",     【 提示：Key值可以写成a.b的形式，当调用getData函数返回的数据结构为:{ a:{ b:\"...\" } } 】",
    "        title: \"KEY-2\",     ",
    "        type: \"file\",     【 file表示文件类型，注意：提交表单前需要先上传文件，返回文件名会自动填充到输入框中，再进行提交表单 】",
    "        verify: \"NO_NULL\",  ",
    "        help: \"提示：key_2 是 file 类型\",     ",
    "        error: \"该值不能为空！\",  ",
    "        url: \"http://127.0.0.1/uploadTest\",     【 文件上传接口地址 】",
    "        fileName: \"fileBtn\",     【 （待定）接口返回数据中文件名称的参数路径 】",
    "        upload: function(data){ alert(上传成功); }     【 文件上传成功回调函数，可选值：函数变量的路径字符串|函数。参数：upload后端返回数据。this：当前element 】",
    "    },{    ",
    "        key: \"key_3\",     ",
    "        title: \"KEY-3\",     ",
    "        type: \"radio\",     【 radio表示单选按钮 】",
    "        value: \"B\",   ",
    "        verify: \"NO_NULL\",  ",
    "        help: \"提示：key_3 是 radio 类型\",     ",
    "        error: \"该值不能为空！\",  ",
    "        children: [    【 配置所有单选项对象的数组，其中text表示显示文本，value表示实际值，注意；如果没有选项要设置为[]空数组 】",
    "            { text: \"A\", value: \"A\" }, { text: \"B\", value: \"B\" }, { text: \"C\", value: \"C\" }",
    "        ]",
    "    }, {  ",
    "        key: \"key_4\",     ",
    "        title: \"KEY-4\",     ",
    "        type: \"checkbox\",     【 checkbox表示多选按钮 】",
    "        value: \"B,C\",     【 多选按钮可以设置多个默认值，用逗号分隔 】",
    "        verify: \"NO_NULL\",     ",
    "        help: \"提示：key_4 是 checkbox 类型\",     ",
    "        error: \"该值不能为空！\",    ",
    "        children: [    【 配置所有多选项对象的数组 】",
    "            { text: \"A\", value: \"A\" }, { text: \"B\", value: \"B\" }, { text: \"C\", value: \"C\" }", 
    "        ]",
    "    }, {   ",
    "        key: \"key_5\",     ",
    "        title: \"KEY-5\",   ",
    "        type: \"select\",     【 select表示下拉框 】 ",
    "        verify: \"NO_NULL\",    ",
    "        value: \"A\",   ",
    "        help: \"提示：key_5 是 select 类型\",   ",
    "        error: \"该值不能为空！\",    ",
    "        children: [    【 配置所有下拉选项对象的数组 】",
    "            { text: \"A\", value: \"A\" }, { text: \"B\", value: \"B\" }, { text: \"C\", value: \"C\" }",
    "        ]",
    "    }, {   ",
    "        key: \"key_6\",     ",
    "        title: \"KEY-6\",     ",
    "        type: \"date\",     【 date表示日期输入框，可以点选日期 】",
    "        verify: \"NO_NULL\",     ",
    "        help: \"提示：key_6 是 date 类型\",     ",
    "        error: \"该值不能为空！\"    ",
    "    }, {     ",
    "        key: \"key_7\",     ",
    "        title: \"KEY-7\",     ",
    "        type: \"textarea\",     【 textarea表示文本域 】",
    "        verify: \"NO_NULL\",     ",
    "        help: \"提示：key_7 是 textarea 类型\",    ",
    "        error: \"该值不能为空！\" ",
    "    }",
    "],",
    // "call: {      【 公共事件回调对象 】",
    // "    submit:{      【 提交表单事件回调对象，如果没有自定义参数，可简写成click: function(){ ...... } 】",
    // "        fn: function(param){  ....  },      【 提交表单事件回调函数，可选值：函数|函数路径字符串。this： 】",
    // "        params: { val: \"test\" }      【 提交表单事件回调函数参数，可选值：所有类型 】",
    // "    }",
    // "} ",
    "",
    "<h2>○ 返回值：</h2>",
    "id: 该 Part 的 ID",
    "params: 该 Part 的配置对象（调用 build 函数传入的配置对象）",
    "config: CONF对象，需要使用 ui.build.buildModule(CONF) 函数转换成 HTML 代码",
    "element: 表单元素集对象，包含所有表单元素，可通过 element.元素Key 获取元素配置对象",
    "",
    "<h2>○ 使用方式：</h2>",
    "var partObj = ui.part.form.build(conf);      【 参数：上述介绍的配置对象 】",
    "var partHtml = ui.build.buildModule(partObj.config);      【 将CONF对象转换成HTML代码 】",
    "$(\"#...\").html(partHtml);      【 将HTML代码插入到指定DOM中 】"
];

window.config.fns = {
    header: { t1: "函数名", t2: "使用方式", t3: "参数", t4: "返回值", t5: "描述" },
    body: [
        { t1: "getConfig", t2: "ui.parts.form.getConfig(id);", t3: "ID", t4: "配置参数对象", t5: "获得指定 ID 的 Form 表单配置对象" },
        { t1: "submit", t2: "ui.parts.form.submit(id, properties);", t3: "ID， Form属性对象（如：action等）", t4: "无", t5: "提交指定 ID 的 Form 表单" },
        { t1: "setData", t2: "ui.parts.form.setData(id, data);", t3: "ID， 新值", t4: "无", t5: "设置指定 ID 的  Form 表单所有元素的值" },
        { t1: "getData", t2: "ui.parts.form.getData(id);", t3: "ID", t4: "所有元素值的对象", t5: "获取指定 ID 的 Form 表单所有元素的值" },
        { t1: "removeData", t2: "ui.parts.form.removeData(id);", t3: "ID", t4: "无", t5: "删除指定 ID 的 Form 表单所有元素的值" },
        { t1: "verifyData", t2: "ui.parts.form.verifyData(id);", t3: "ID", t4: "所有元素验证结果和值的对象", t5: "验证指定 ID 的 Form 表单输入是否正确" },
        { t1: "initData", t2: "ui.parts.form.initData(id);", t3: "ID", t4: "无", t5: "初始化指定 ID 的 Form 表单所有元素的值" },
        { t1: "showHelp", t2: "ui.parts.form.showHelp(id);", t3: "ID", t4: "无", t5: "显示指定 ID 的 Form 表单所有元素的帮助信息" },
        { t1: "command", t2: "ui.parts.form.command(id, commandOf);", t3: "ID, 关联元素Key", t4: "无", t5: "内部使用函数" },
        { t1: "element.setDom", t2: "ui.parts.form.element.setDom(id, key, params);", t3: "ID， 元素Key， 配置参数", t4: "无", t5: "重新设置指定 ID 的  Form 表单 Key 元素配置" },
        { t1: "element.setData", t2: "ui.parts.form.element.setData(id, key, data);", t3: "ID， 元素Key， 新值", t4: "无", t5: "设置指定 ID 的  Form 表单 Key 元素的值" },
        { t1: "element.getData", t2: "ui.parts.form.element.getData(id, key);", t3: "ID， 元素Key", t4: "指定 Key 的元素值", t5: "获取指定 ID 的 Form 表单 Key 元素的值" },
        { t1: "element.initData", t2: "ui.parts.form.element.initData(id, key);", t3: "ID， 元素Key", t4: "无", t5: "初始化指定 ID 的 Form 表单 Key 元素的值" },
        { t1: "element.removeData", t2: "ui.parts.form.element.removeData(id, key);", t3: "ID， 元素Key", t4: "无", t5: "删除指定 ID 的 Form 表单 Key 元素的值" },
        { t1: "element.file.checked", t2: "ui.parts.form.element.file.checked(id, key);", t3: "ID, 元素Key", t4: "无", t5: "文件上传相关的内部使用函数" },
        { t1: "element.file.browse", t2: "ui.parts.form.element.file.browse(id, key);", t3: "ID， 元素Key", t4: "无", t5: "文件上传相关的内部使用函数" },
        { t1: "element.file.upload", t2: "ui.parts.form.element.file.upload(id, key, url);", t3: "ID， 元素Key， 上传地址", t4: "无", t5: "文件上传相关的内部使用函数" }
    ]
};

window.config.demos = [{
    title: "基本示例",
    height: 350,
    config: {
        id: "form_demo_0",
        col: 3,
        elements: [
            { key: "user.name", title: "姓名", type: "text", default: "请填写姓名", verify: "NO_NULL", help: "提示：text 类型", error: "该值不能为空！" },
            { key: "user.img", title: "头像", type: "file", default: "请上传头像", verify: "NO_NULL", help: "file 类型", error: "该值不能为空！",
                url: "http://127.0.0.1/uploadTest", fileName: "fileBtn", upload: function(){ alert(上传成功); } },
            {
                key: "user.sex", title: "性别", type: "radio", value: "B", verify: "NO_NULL", help: "提示：radio 类型", error: "该值不能为空！",
                children: [{ text: "男", value: "A" }, { text: "女", value: "B" }]
            }, {
                key: "info.hobby", title: "爱好", type: "checkbox", value: "B,C", verify: "NO_NULL", help: "提示：checkbox 类型", error: "该值不能为空！",
                children: [{ text: "运动", value: "A" }, { text: "音乐", value: "B" }, { text: "旅行", value: "C" }]
            }, {
                key: "info.gread", title: "学历", type: "select", verify: "NO_NULL", value: "C", help: "提示：select 类型", error: "该值不能为空！",
                children: [{ text: "低", value: "A" }, { text: "中", value: "B" }, { text: "高", value: "C" }]
            },
            { key: "info.birthday", title: "生日", type: "date", verify: "NO_NULL", help: "提示：date 类型", error: "该值不能为空！" },
            { key: "info.mark", title: "描述", type: "textarea", verify: "NO_NULL", help: "提示：textarea 类型", error: "该值不能为空！" }
        ]
    },
    html: "&nbsp;&nbsp;<button onclick=\"ui.parts.form.showHelp('form_demo_0','auto')\">显示帮助</button>" +
            "&nbsp;&nbsp;<button onclick=\"ui.parts.form.verifyData('form_demo_0')\">验证</button>"
}];
