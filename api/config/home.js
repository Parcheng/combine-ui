window.config = {};
window.config.info = [
    "<h2>○ 对象结构：</h2>",
    "ui: {",
    "    build: 构建工具对象，提供的函数可以把 Part 和 Module 返回的CONF配置对象转换成HTML代码。",
    "    parts: 组件构建对象，封装了多种页面组成元素，详见【Parts】。可自行根据实际需求将多个组件组组合成 Module 使用。",
    "    modules: 模块构建对象，每个Module由多个Part组成，详见【Modules】。该对象封装了页面一些常见模块，可直接使用。",
    "    page: 页面构建对象，提供页面构建函数，可将多个 Part 或 Module 组合成页面，无须自行操作DOM元素。",
    "    common: 公共函数对象，里面封装了一些公共函数，可直接使用。",
    "    config: 框架配置对象，可配置Part、Module、Page中使用的默认值。",
    "    custom: 自定义对象，可自行封装一些自定义属性、对象和函数放入其中。",
    "}",
    "",
    "<h2>○ 使用方式：</h2>",
    "Part使用：",
    "var buttonConf = {...};    【 Part配置文件，详见Part 】",
    "var buttonObj = ui.parts.buttons.build(buttons);    【 调用 Button Part 构建函数，返回配置对象 】",
    "var buttonHtml = ui.build.buildModule(buttonObj.config);    【 使用 build 中 buildModule 函数将 Part 返回的 CONF 对象转换成 HTML 代码 】",
    "$(\"#...\").html(buttonHtml);    【 将 HTML 代码插入到指定DOM元素中 】",
    "",
    "Module使用：",
    "var tableConf = {...};    【 Module配置文件，详见Module 】",
    "var tableObj = ui.modules.table.build(tableConf);    【 调用 Table Module 构建函数，返回配置对象 】",
    "var tableHtml = ui.build.buildModule(tableObj.config);    【 使用 build 中 buildModule 函数将 Module 返回的 CONF 对象转换成 HTML 代码 】",
    "$(\"#...\").html(tableHtml);   【 将 HTML 代码插入到指定 DOM 元素中 】",
    "",
    "Page使用：",
    "var conf = {    【 Page配置文件，由多个 Part 或 Module 组成，详见Page 】",
    "    id: \"domID\",     【 设置将生成的 HTML 插入到的 DOM 元素 ID 】",
    "    children: [    【 Part 和 Module 配置对象数组 】",
    "        { ",
    "            type: \"part.form\",     【 Part 的 Form 类型 】",
    "            config: {...}     【 Form Part 配置对象 】",
    "        },{ ",
    "            type: \"module.table\",     【 Module 的 Table 类型 】",
    "            config: {...}     【 Table Module 配置对象 】",
    "        }, ",
    "        ...... ",
    "    ]",
    "};",
    "ui.page.build(conf);    【 将配置文件构建为 HTML 代码直接写入指定 DOM 中 】"
];

window.config.demos = undefined;
